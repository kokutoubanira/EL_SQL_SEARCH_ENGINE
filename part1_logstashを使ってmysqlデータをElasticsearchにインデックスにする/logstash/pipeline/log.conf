input {
  jdbc {
    #ダウンロードしたMySQL Connector/J のパスを記述します。相対パスで記述する場合は、Logstash を実行するディレクトリからの相対パス
    jdbc_driver_library => "mysql-connector-java-5.1.39/mysql-connector-java-5.1.39-bin.jar"
    # これは例のまま記述すれば良い
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    # jdbc_connection_string: jdbc:mysql://{MYSQL_HOST}:{PORT}/{DATABASE_NAME}
    jdbc_connection_string => "jdbc:mysql://localhost:3306/product"
    # jdbc_user: MySQL のユーザー名を記述
    jdbc_user => "product"
    # jdbc_password: MySQL ユーザーのパスワードを記述します。
    jdbc_password => "1234"
    # sqlのタイムゾーンに合わせる
    jdbc_default_timezone => "Asia/Tokyo"
    # statement: MySQL からデータを抽出するためおSELECT文を記述
    statement => "SELECT * FROM product"
    # type: filter や output ステージで特定のイベントを識別するための識別名を設定
    type => "products"
  }
}
filter {
  if [type] == "products" {
    # ---------------------------------
    # {"lang_id": "1"}
    # convert to
    # {"language": "Japanese"}
    # ---------------------------------
    translate {
      field => "lang_id"
      destination => "language"
      dictionary => {
        "1" => "English"
        "2" => "Japanese"
        "3" => "Chinese"
      }
      remove_field => "lang_id"
    }
    # ---------------------------------
    # {"colors": "Red,Blue,Yellow"}
    # Convert to
    # {"colors": ["Red", "Blue", "Yellow"]}
    # ---------------------------------
    mutate {
      split => {"colors" => ","}
    }
  }
}
output {
    elasticsearch {
      manage_template => false
      hosts => ["localhost:9200"]
      index => "product"
      document_type => "%{type}"
      document_id => "%{id}"
    }
    stdout {codec => rubydebug {metadata => true }}
}